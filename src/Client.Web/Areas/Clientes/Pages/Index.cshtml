@page
@using Client.Web.Areas.Clientes
@using Client.Web.Areas.Clientes.Pages
@using Client.Web.Utils
@model IndexModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Cadastro de Clientes</h1>

<div class="container p-4 border">
    <div class="row pb-2">
        <div class="col">
            <form class="d-flex">
                <input class="form-control me-2" type="search" name="Search" value="@Model.Search"
                       placeholder="Pesquisar por Razão Social ou Nome Fantasia ou CEP" aria-label="Search" />
                <button class="btn btn-outline-primary"><i class="fa-solid fa-magnifying-glass"></i></button>

            </form>
        </div>
    </div>
    <div class="row pb-2 py-3">
        <div class="col pt-1">
            <a asp-page="./Create" class="btn btn-outline-primary">
                <i class="fa-solid fa-plus"></i> Novo Cliente
            </a>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th style="cursor:pointer" onclick="sortTable('RazaoSocial')">Razão Social</th>

                <th style="cursor:pointer" onclick="sortTable('NomeFantasia')">Nome Fantasia</th>

                <th style="cursor:pointer" onclick="sortTable('Cep')">CEP</th>

                <th>Usuário Inclusão</th>
                <th>Data Inclusão</th>
                <th class="text-end px-5" colspan="3">Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Cliente)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.RazaoSocial)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NomeFantasia)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Cep)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NomeUsuario)
                    </td>
                    <td>
                        @(item.DataInclusao.HasValue ? item.DataInclusao.Value.ToString("dd/MM/yyyy HH:mm:ss") : "")
                    </td>
                    <td class="text-end">
                        <a asp-page="./Edit" class="btn btn-outline-success" asp-route-id="@item.Id"><i class="fas fa-edit" title="Editar"></i></a>
                        <a asp-page="./Details" class="btn btn-outline-warning" asp-area="Clientes" asp-route-id="@item.Id" title="Detalhes"><i class="fa-solid fa-magnifying-glass"></i></a>
                        <a class="btn btn-outline-danger" href="javascript:void(0)"  onclick="crud.functions.confirma(@item.Id)" title="Deletar"><i class="fas fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination">

            @for (int i = 1; i <= Model.totalpage; i++)
            {
                string active = "";
                if (i == Model.pageIndex) active = active;
                <li class="page-item" @active aria-current="page" >
                    <a style="@(i == Model.pageIndex ? "background-color: #ececec;" : "")" class="page-link btn-primary" href="?pageindex=@(i)&Search=@Model.Search&column=@Model.column&orderBy=@Model.orderBy">@i</a>
                </li>

            }
        </ul>

    </nav>

    @Html.Partial("_ConfirmacaoModal")

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script type="text/javascript">
            var crud = new Crud('');
            
            (() => {
                $("#btnSim").click((e) => {
                    e.preventDefault();
                    var idCliente = $("#idClienteExcluir").val();
                    crud.requests.deletar(idCliente).then((s) =>{
                        setTimeout(() => {
                            window.location.reload();
                        }, 700);
                    });

                    $('#confirmaExcluir').modal('hide');
                });

                var msg = parserJson('@(TempData["StatusMessage"])');

                if (!msg) return;

                if (msg['Tipo'] == 'sucesso') toastr.success(msg['Mensagem'], "Cliente");
                else if (msg['Tipo'] == 'erro') toastr.error(msg['Mensagem'], "Cliente");
                else if (msg['Tipo'] == 'aviso') toastr.warning(msg['Mensagem'], "Cliente");

                
                    
                
            })($);

            function sortTable(column) {
                let orderBy = "desc";
                let currentColumn = "@Model.column";
                let currentorderBy = "@Model.orderBy";

                if (column == currentColumn) {
                    if (currentorderBy == "asc") { orderBy = "desc"; }
                    else { orderBy = "asc"; }

                }
                window.location.href = "?search=@(Model.Search)&column=" + column + "&orderBy=" + orderBy;
            }            
        </script>
    }

